<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.blogs.dao.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.xh.blogs.domain.po.Article" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="author_id" property="authorId" jdbcType="INTEGER" />
    <result column="comments" property="comments" jdbcType="INTEGER" />
    <result column="editor" property="editor" jdbcType="VARCHAR" />
    <result column="favors" property="favors" jdbcType="INTEGER" />
    <result column="featured" property="featured" jdbcType="INTEGER" />
    <result column="belong_group" property="belongGroup" jdbcType="INTEGER" />
    <result column="images" property="images" jdbcType="INTEGER" />
    <result column="last_image_id" property="lastImageId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="views" property="views" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>


  <update id="addViews" parameterType="java.lang.Integer" >
        UPDATE t_article
        SET views = views + 1
        WHERE id = #{id}
  </update>

  <update id="addComments" parameterType="java.lang.Integer" >
        UPDATE t_article
        SET comments = comments + 1
        WHERE id = #{articleId}
  </update>

  <update id="minusComments" parameterType="java.lang.Integer" >
        UPDATE t_article
        SET comments = comments - 1
        WHERE id = #{articleId}
        AND comments > 0
  </update>

  <update id="minusFavors" parameterType="java.lang.Integer" >
        UPDATE t_article
        SET favors = favors - 1
        WHERE id = #{articleId}
        AND favors > 0
  </update>

  <update id="addFavors" parameterType="java.lang.Integer" >
        UPDATE t_article
        SET favors = favors + 1
        WHERE id = #{articleId}
  </update>

  <select id="selectAll2EsArticle" resultType="com.xh.blogs.domain.es.EsArticle">
        SELECT
            a.id,
            a.featured,
            a.summary,
            a.tags,
            a.belong_group,
            a.comments,
            a.favors,
            a.type,
            a.title,
            a.create_time
        FROM
            t_article a
        WHERE
            a.`status` = 10
  </select>

  <select id="selectByUserId" resultType="com.xh.blogs.domain.po.Article">
      <include refid="selectByIdCommon"/>
      AND a.author_id = #{userId}
  </select>

          <sql id="selectByIdCommon">
              <include refid="commonField"/>
              u.comments "user.comments",
              u.favors "user.favors",
              u.posts "user.posts",
              u.fans "user.fans",
              act.content "editor"
              FROM
              t_article a
              LEFT JOIN t_user u ON u.id = a.author_id
              LEFT JOIN t_article_content act ON act.id = a.id
              WHERE
              a.id = #{id}
              AND a.`status` = 10
          </sql>

  <select id="selectById" parameterType="java.lang.Integer" resultType="com.xh.blogs.domain.po.Article">
      <include refid="selectByIdCommon"/>
  </select>

  <select id="selectInfoWithPage" parameterType="java.util.Map" resultType="com.xh.blogs.domain.po.Article">
      <include refid="commonJoint"/>
      <where>
          <if test="status != null and status != ''"> a.`status` = #{status} </if>
          <if test="userId != null and userId != ''"> AND u.id = #{userId} </if>
          <if test="groupId != null and groupId != ''"> AND a.belong_group = #{groupId} </if>
          <if test="sort == 10"> AND a.featured = 10 </if>
          <if test="title != null and title != ''"> AND a.title LIKE CONCAT('%', #{title}, '%') </if>
          <if test="tagName != null and tagName != ''"> AND a.tags LIKE CONCAT('%', #{tagName}, '%') </if>
      </where>
      GROUP BY a.id
      <if test="sort == 20"> ORDER BY (a.favors + FLOOR(a.views / 3)) DESC </if>
      <if test="sort == 40 or sort == 10"> ORDER BY a.create_time DESC </if>
  </select>

    <select id="selectByRank" parameterType="java.util.Map" resultType="com.xh.blogs.domain.entity.EHotArticle">
        SELECT
            a.id,a.title,a.favors,a.views
        FROM
            t_article a
        WHERE
            a.`status` = 10
        <if test="sort == 10"> AND a.featured = 10 </if>
        GROUP BY a.id
        <if test="sort == 20"> ORDER BY (a.favors + FLOOR(a.views / 3)) DESC </if>
        <if test="sort == 40 or sort == 10"> ORDER BY a.create_time DESC </if>
        LIMIT #{count}
    </select>


    <sql id="commonJoint">
        <include refid="commonField"/>
        group_concat(CONCAT(ac.id,'---',ac.original,'---',ac.preview,'---',ac.store) separator '===') accessorys
        FROM
        t_article a
        LEFT JOIN t_article_accessory ac ON ac.to_id = a.id
        LEFT JOIN t_user u ON u.id = a.author_id
    </sql>

    <sql id="commonField">
        SELECT
            u.id "user.id",
            u.nick_name "user.nickName",
            u.user_name "user.userName",
            u.avatar "user.avatar",
            a.id,
            a.author_id,
            a.comments,
            a.favors,
            a.belong_group,
            a.images,
            a.type,
            a.last_image_id,
            a.summary,
            a.tags,
            a.title,
            a.views,
            a.create_time,
            a.featured,
    </sql>


</mapper>