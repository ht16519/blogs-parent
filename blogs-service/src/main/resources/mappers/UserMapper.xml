<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.blogs.dao.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xh.blogs.domain.po.User" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="last_login" property="lastLogin" jdbcType="TIMESTAMP" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="active_email" property="activeEmail" jdbcType="INTEGER" />
    <result column="comments" property="comments" jdbcType="INTEGER" />
    <result column="fans" property="fans" jdbcType="INTEGER" />
    <result column="favors" property="favors" jdbcType="INTEGER" />
    <result column="follows" property="follows" jdbcType="INTEGER" />
    <result column="posts" property="posts" jdbcType="INTEGER" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
  </resultMap>

    <resultMap id="selectUserInfoByNameMap" type="com.xh.blogs.domain.po.User" extends="BaseResultMap">
        <collection property="roles" ofType="com.xh.blogs.domain.po.Role" javaType="java.util.Set">
            <id column="role_id" property="id" jdbcType="INTEGER" />
            <result column="role_name" property="name" jdbcType="VARCHAR" />
            <result column="role_remark" property="remark" jdbcType="VARCHAR" />
        </collection>
    </resultMap>

    <update id="addCommentsById">
        UPDATE t_user
        SET comments = comments + 1
        WHERE id = #{authorId}
    </update>

    <update id="updatePostsById">
        UPDATE t_user
        SET posts = posts + 1
        WHERE id = #{authorId}
    </update>

    <update id="minusFansByUserId">
        UPDATE t_user
        SET fans = fans - 1
        WHERE id = #{userId}
        AND fans > 0
    </update>

    <update id="addFansByUserId">
        UPDATE t_user
        SET fans = fans + 1
        WHERE id = #{userId}
    </update>

  <select id="selectByHottest" resultType="com.xh.blogs.domain.entity.EHotUser">
      SELECT
          id,nick_name,avatar,fans
      FROM
          t_user
      WHERE
          `status` = 10
      ORDER BY (fans + FLOOR(posts / 3)) DESC
      LIMIT #{count}
  </select>

    <select id="selectUserInfoByName" parameterType="java.lang.String" resultMap="selectUserInfoByNameMap">
        SELECT
            u.*, r.id AS role_id,
            r.`name` AS role_name,
            r.remark AS role_remark
        FROM
            t_user AS u
        LEFT JOIN t_user_role AS ur ON ur.user_id = u.id
        LEFT JOIN t_role AS r ON r.id = ur.role_id
        WHERE
            u.user_name = #{userName}
        AND u.`status` = 10
    </select>
</mapper>