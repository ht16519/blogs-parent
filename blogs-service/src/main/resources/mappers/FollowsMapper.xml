<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.blogs.dao.mapper.FollowsMapper" >
  <resultMap id="BaseResultMap" type="com.xh.blogs.domain.po.Follows" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="follow_id" property="followId" jdbcType="INTEGER" />
  </resultMap>

    <select id="selectFollowsByUserId" resultType="com.xh.blogs.domain.po.Follows">
        <include refid="commonSql"/>
        INNER JOIN t_user u ON u.id = f.user_id
        WHERE
            f.follow_id = #{userId}
        GROUP BY u.id
        ORDER BY f.create_time DESC
    </select>

    <select id="selectFansByUserId" resultType="com.xh.blogs.domain.po.Follows">
        <include refid="commonSql"/>
        INNER JOIN t_user u ON u.id = f.follow_id
        WHERE f.user_id = #{userId}
        GROUP BY u.id
        ORDER BY f.create_time DESC
    </select>

  <insert id="customInsert">
      INSERT IGNORE INTO t_follows (
          create_time,
          follow_id,
          user_id
      )
      VALUES
          (NOW(), #{followId}, #{userId})
  </insert>

    <sql id="commonSql">
        SELECT
            f.create_time,
            u.posts "user.posts",
            u.comments "user.comments",
            u.nick_name "user.nick_name",
            u.avatar "user.avatar",
            u.id "user.id"
        FROM
            t_follows f
    </sql>

</mapper>